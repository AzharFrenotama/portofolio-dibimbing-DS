# -*- coding: utf-8 -*-
"""tugas_day3_dibimbingDS

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19JJVZSnlLGcF421l-HZYild0Kcq2AxzG

## Investigasi sampel data titanic berikut dengan cara :
1. Cek secara head, tail, sample, info lalu observasi apa yang bisa anda peroleh ?
2. Lakukan Statistical Summary dengan mengekstrak informasi yang didapat dari observasi anda ?
3. Cek apakah ada duplikat dan bagaimana handlenya ?
4. Cek apakah ada missing value, berapa persentasenya jika ada, dan bagaimana cara handlenya ?
"""

from google.colab import drive
drive.mount('/content/drive')

"""## Import Libraries"""

import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
pd.set_option("display.max_columns", None)
pd.set_option("display.max_rows", None)

df = pd.read_excel('/content/drive/MyDrive/Colab Notebooks/titanic.xlsx')
data = df.copy()
data.head()

data.tail()

data.sample(5)

"""Observation:
1. Column name dan sex berupa string, sedangkan column survived dan age berupa numeric
2. Column survived mengeluarkan output (0 dan 1)
3. Column sex mengeluarkan dua output yaitu male dan female
"""

data.info()

"""Observation:


1.   data memiliki 4 column dengan 500 baris
2.   hanya column age yang memiliki missing values


"""

data.columns

categoricals = ['name', 'sex']


numericals = ['survived', 'age',]

data[numericals].describe()

data[categoricals].describe()

"""observation:
1. Column sex mempunyai 2 unique value
"""

categoricals

for col in categoricals:
  print(f"Value counts of {col} column")
  print(data[col].value_counts(), '\n')

for col in numericals:
  print(f"==== {col} ====")
  print(data[col].value_counts(), '\n')

len(data.drop_duplicates()) / len(data)

duplicates = data[data.duplicated(keep=False)]

duplicate_counts = duplicates.groupby(list(data.columns)).size().reset_index(name='jumlah_duplikat')

sorted_duplicates = duplicate_counts.sort_values(by='jumlah_duplikat', ascending=False)

print("Baris yang terduplikasi:")
sorted_duplicates

data = data.drop_duplicates()

len(data.drop_duplicates()) / len(data)

data.isna().sum()

data.isnull().sum()

for column in data.columns:
    print(f"============= {column} =================")
    display(data[column].value_counts())
    print()

total_rows = len(data)

for column in data.columns:
    missing_count = data[column].isna().sum()
    missing_percentage = (missing_count / total_rows) * 100
    print(f"Column '{column}' Has {missing_count} missing values ({missing_percentage:.2f}%)")

for column in data.columns:
    if data[column].dtype == 'object':
        data[column].fillna(data[column].mode()[0], inplace=True)
    else:
        data[column].fillna(data[column].median(), inplace=True)

data.isna().sum()

data.info()